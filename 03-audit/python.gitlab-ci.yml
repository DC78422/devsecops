include:
  - local: 'functions.gitlab-ci.yml'

variables:
#   PYTHON_DEPENDENCY_MANAGMENT: "environment"   # Build an SBOM from Python (virtual) environment
#   PYTHON_DEPENDENCY_MANAGMENT: "requirements"  # Build an SBOM from Pip requirements
  PYTHON_DEPENDENCY_MANAGMENT: "pipenv"        # Build an SBOM from Pipenv manifest
#   PYTHON_DEPENDENCY_MANAGMENT: "poetry"        # Build an SBOM from Poetry project

Forming CycloneDX SBOM:
  extends:
    - ".audit_src_base"
    - ".audit_rule"
  image:
    name: registry.gitlab.com/dc20e6/devsecops/images/cyclonedx-py:latest
  script:
    - cyclonedx-py $PYTHON_DEPENDENCY_MANAGMENT
      --output-format json
      --outfile reports/cdx-sbom.py.json
  after_script:
    - |
      if [ "$DT_UPLOAD_REPORT" = 'true' ]; then
        echo "Uploading"
        cat reports/cdx-sbom.py.json
      fi
  when: manual

# poetry-audit:
#   extends:
#     - ".audit_src_base"
#     - ".audit_rule_mr"
#   variables:
#     AUDIT_IMAGE: registry.gitlab.com/dc20e6/devsecops/images/python:3.11.6-p9
#   before_script:
#     - poetry self add ko-poetry-audit-plugin
#   script:
#     - poetry audit --with dev
#   when: manual