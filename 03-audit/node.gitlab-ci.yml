stages:
  - Audit (src)

Forming CycloneDX SBOM (npm) v1:
  stage: Audit (src)
  variables:
    PACKAGE_LOCK_ONLY: "true"
    SPEC_VERSION: "1.4"                       # (choices: "1.2", "1.3", "1.4", "1.5", "1.6")
    OUTPUT_FILE: "reports/cdx-sbom.npm.json"
    MC_TYPE: "application"                    # (choices: "application", "firmware", "library")
  image:
    name: "node:22.9.0-alpine3.20"
  before_script:
    - npm install --global @cyclonedx/cyclonedx-npm
    - cyclonedx-npm --help
    - mkdir reports/ || true
  script:
    - cyclonedx-npm
      --package-lock-only $PACKAGE_LOCK_ONLY
      --spec-version $SPEC_VERSION
      --output-file $OUTPUT_FILE
      --mc-type $MC_TYPE
  artifacts:
    paths:
      - reports/cdx-sbom.npm.json
    expire_in: 1 day

Forming CycloneDX SBOM (npm) v2:
  stage: Audit (src)
  variables:
    PACKAGE_LOCK_ONLY: "true"
    SPEC_VERSION: "1.4"                       # (choices: "1.2", "1.3", "1.4", "1.5", "1.6")
    OUTPUT_FILE: "reports/cdx-sbom.npm.json"
    MC_TYPE: "application"                    # (choices: "application", "firmware", "library")
  image:
    name: "node:22.9.0-alpine3.20"
  before_script:
    - npx --package @cyclonedx/cyclonedx-npm --call exit
    - npx @cyclonedx/cyclonedx-npm --help
    - mkdir reports/ || true
  script:
    - npx @cyclonedx/cyclonedx-npm
      --package-lock-only $PACKAGE_LOCK_ONLY
      --spec-version $SPEC_VERSION
      --output-file $OUTPUT_FILE
      --mc-type $MC_TYPE
  artifacts:
    paths:
      - reports/cdx-sbom.npm.json
    expire_in: 1 day

Forming CycloneDX SBOM (npm) v3:
  stage: Audit (src)
  variables:
    PACKAGE_LOCK_ONLY: "true"
    SBOM_FROMAT: "cyclonedx"
    SBOM_TYPE: "application"                   # (choices: "application", "firmware", "library")
    SPEC_VERSION: "1.4"                        # (choices: "1.2", "1.3", "1.4", "1.5", "1.6")
    OUTPUT_FILE: "reports/cdx-sbom.npm.json"
  image:
    name: "node:22.9.0-alpine3.20"
  before_script:
    - npm install -g npm@latest
    - npm sbom --help
    - mkdir reports/ || true
  script:
    - npm sbom \
      --package-lock-only $PACKAGE_LOCK_ONLY \
      --sbom-format $SBOM_FROMAT \
      --sbom-type $SBOM_TYPE > $OUTPUT_FILE
  artifacts:
    paths:
      - reports/cdx-sbom.npm.json
    expire_in: 1 day

# Requirements
#   node >= 18
#   yarn >= 3 (berry)
Forming CycloneDX SBOM (yarn) v1:
  stage: Audit (src)
  variables:
    SPEC_VERSION: "1.4"                       # (choices: "1.2", "1.3", "1.4", "1.5", "1.6")
    OUTPUT_FILE: "reports/cdx-sbom.yarn.json"
    MC_TYPE: "application"                    # (choices: "application", "firmware", "library")
  image:
    name: "node:22.9.0-alpine3.20"
  before_script:
    - yarn dlx -q @cyclonedx/yarn-plugin-cyclonedx --help
    - mkdir reports/ || true
  script:
    - yarn dlx -q @cyclonedx/yarn-plugin-cyclonedx
      --spec-version $SPEC_VERSION
      --output-file $OUTPUT_FILE
      --mc-type $MC_TYPE
  artifacts:
    paths:
      - reports/cdx-sbom.yarn.json
    expire_in: 1 day

# Requirements
#   node >= 18
#   yarn >= 3 (berry)
Forming CycloneDX SBOM (yarn) v2:
  stage: Audit (src)
  variables:
    SPEC_VERSION: "1.4"                       # (choices: "1.2", "1.3", "1.4", "1.5", "1.6")
    OUTPUT_FILE: "reports/cdx-sbom.yarn.json"
    MC_TYPE: "application"                    # (choices: "application", "firmware", "library")
  image:
    name: "node:22.9.0-alpine3.20"
  before_script:
    - yarn add --dev @cyclonedx/yarn-plugin-cyclonedx
    - yarn exec cyclonedx-yarn --help
    - mkdir reports/ || true
  script:
    - yarn exec cyclonedx-yarn
      --spec-version $SPEC_VERSION
      --output-file $OUTPUT_FILE
      --mc-type $MC_TYPE
  artifacts:
    paths:
      - reports/cdx-sbom.yarn.json
    expire_in: 1 day

# Requirements
#   node >= 18
#   yarn >= 3 (berry)
Forming CycloneDX SBOM (yarn) v3:
  stage: Audit (src)
  variables:
    SPEC_VERSION: "1.4"                       # (choices: "1.2", "1.3", "1.4", "1.5", "1.6")
    OUTPUT_FILE: "reports/cdx-sbom.yarn.json"
    MC_TYPE: "application"                    # (choices: "application", "firmware", "library")
  image:
    name: "node:22.9.0-alpine3.20"
  before_script:
    - yarn plugin import https://github.com/CycloneDX/cyclonedx-node-yarn/releases/latest/download/yarn-plugin-cyclonedx.cjs
    - yarn cyclonedx --help
    - mkdir reports/ || true
  script:
    - yarn cyclonedx
      --spec-version $SPEC_VERSION
      --output-file $OUTPUT_FILE
      --mc-type $MC_TYPE
  artifacts:
    paths:
      - reports/cdx-sbom.yarn.json
    expire_in: 1 day
