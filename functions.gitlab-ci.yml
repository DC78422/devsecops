variables:
  IMAGE_TO_SCAN: $APP_IMAGE:latest
  SECURITY_BRANCH: $CI_DEFAULT_BRANCH
  RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH: true

stages:
  - .pre
  - Secrets
  - Lint
  - Audit (src)
  - SAST (src)
  - Build
  - Audit (image)
  - Deploy
  - DAST
  - .post

".artifacts":
  before_script:
    - mkdir reports/ || true
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - reports/
    expire_in: 1 day
    when: always

".secrets_base":
  stage: Secrets
  extends:
    - ".artifacts"

".lint_base":
  stage: Lint
  extends:
    - ".artifacts"

".audit_src_base":
  stage: Audit (src)
  extends:
    - ".artifacts"

".sast_base":
  stage: SAST (src)
  extends:
    - ".artifacts"

".audit_image_base":
  stage: Audit (image)
  extends:
    - ".artifacts"

".dast_base":
  stage: DAST
  extends:
    - ".artifacts"

".security_rule":
  rules:
    - if: $CI_COMMIT_REF_NAME == $SECURITY_BRANCH
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "true"'
      allow_failure: true
    # disallow failures on feature-branches when RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == false
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "false"'
      allow_failure: false

".secrets_rule":
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "true"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: true
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "false"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: false

".lint_rule":
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "true"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: true
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "false"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: false

".audit_rule":
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      variables:
        GENERATE_REPORT: "false"
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "true"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: true
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "false"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: false

".audit_rule_mr":
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

".sast_rule":
  rules:
    - if: "$SAST_DISABLED == 'true' || $SAST_DISABLED == '1'"
      when: never
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "true"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: true
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "false"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: false

".dast_rule":
  rules:
    - if: "$DAST_DISABLED == 'true' || $DAST_DISABLED == '1'"
      when: never
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "true"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: true
    - if: '$CI_COMMIT_REF_NAME == $SECURITY_BRANCH && $RULES_ALLOW_FAILURE_ON_TEST_ON_DEFAULT_BRANCH == "false"'
      variables:
        GENERATE_REPORT: "true"
      allow_failure: false
