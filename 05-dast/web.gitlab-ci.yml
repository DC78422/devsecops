include:
  - local: 'functions.gitlab-ci.yml'

# Nikto (https://github.com/sullo/nikto)
Nikto:
  extends:
    - ".dast_base"
  variables:
    DAST_IMAGE: harbor.example.com/devops/nikto:latest
  script:
    - echo $CI_JOB_NAME
    - nikto.pl
      -host $DAST_WEBSITE
      -o reports/dast.nikto.report.json
  after_script:
    - echo "Uploading"
    - dd-wrapper --dd-report-file=reports/dast.nikto.report.json --dd-engagement-test-title="Nikto" --dd-engagement-scan-type="Nikto Scan"
  rules:
    - if: $DAST_WEBSITE
  when: manual

Nikto (all):
  extends:
    - ".dast_base"
  variables:
    DAST_IMAGE: harbor.example.com/devops/nikto:latest
  script:
    - echo $CI_JOB_NAME
    - nikto.pl
      -host $DAST_WEBSITE
      -o reports/dast.nikto_all.report.json
      -C all
  after_script:
    - echo "Uploading"
    - dd-wrapper --dd-report-file=reports/dast.nikto_all.report.json       --dd-engagement-test-title="Nikto (all)"       --dd-engagement-scan-type="Nikto Scan"
  rules:
    - if: $DAST_WEBSITE
  when: manual

# Burp Dastardly
Dastardly:
  extends:
    - ".dast_base"
  variables:
    DAST_IMAGE: harbor.example.com/devops/dastardly:2024.4.1
    DAST_IMAGE_ENTRYPOINT: "dastardly-entrypoint.sh"
    BURP_START_URL: https://$DAST_WEBSITE
    BURP_REPORT_FILE_PATH: reports/dast.dastardly.report.xml
  script:
    - /usr/local/burpsuite_enterprise/bin/dastardly
  after_script:
    - echo "Uploading"
    - dd-wrapper --dd-report-file=reports/dast.dastardly.report.xml   --dd-engagement-test-title="Dastardly"  --dd-engagement-scan-type="Burp Dastardly Scan"
  rules:
    - if: $DAST_WEBSITE
  when: manual
  allow_failure: true

# Zed Attack Proxy
ZAP baseline scan:
  extends:
    - ".dast_base"
  variables:
    DAST_IMAGE: harbor.example.com/devops/zap:2.15.0
  before_script:
    - mkdir zap/ || true
  script:
    - echo "create a directory..."
    - mkdir /zap/wrk
    - echo "Execute the baseline scan..."
    - /zap/zap-baseline.py
      -t http://$DAST_WEBSITE
      -g gen.conf
      -r dast.zap-baseline-scan.report.html
      -x dast.zap-baseline-scan.report.xml
  after_script:
    - echo "Copy report file to the artifact path..."
    - cp /zap/wrk/dast.zap-baseline-scan.report.html ./zap/
    - cp /zap/wrk/dast.zap-baseline-scan.report.xml ./zap/
    - echo "Uploading"
    - dd-wrapper --dd-report-file=zap/dast.zap-baseline-scan.report.xml --dd-engagement-test-title="ZAP baseline scan" --dd-engagement-scan-type="ZAP Scan"
  rules:
    - if: $DAST_WEBSITE
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - zap/
    expire_in: 1 day
    when: always
  when: manual
  allow_failure: true

DefectDojo Engagement Creation:
  extends:
    - ".DefectDojo_Engagement_Creation"
